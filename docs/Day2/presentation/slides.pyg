boolean result = (a == b); // result true, wenn a gleich b
    \end{minted}

    \item<2->[\textbullet] \texttt{a != b} \quad Wahr, wenn \texttt{a} ungleich \texttt{b} ist
    \begin{minted}[style=friendly]{java}
boolean result = (a != b); // result true, wenn a ungleich b
    \end{minted}

    \item<3->[\textbullet] \texttt{a < b} \quad Wahr, wenn \texttt{a} kleiner als \texttt{b} ist
    \begin{minted}[style=friendly]{java}
boolean result = (a < b); // result true, wenn a kleiner als b
    \end{minted}

    \item<4->[\textbullet] analog bei \texttt{a > b}, \texttt{a <= b}, \texttt{a >= b} \quad
  \end{itemize}
\end{frame}



%BOOLEAN OPERATOREN
\begin{frame}[fragile]
  \frametitle{Boolean Operatoren}
  \begin{itemize}
    \item<1-> \texttt{!a} \quad \textrightarrow \quad nicht a
    \item<2-> \texttt{a \&\& b}	\quad \textrightarrow \quad a UND b
    \item<3-> \texttt{a || b} \quad \textrightarrow \quad a ODER b
  \end{itemize}
\quad
  \only<4->{Klammern priorisieren:}
    \begin{itemize}
        \item<4-> \mintinline[style=friendly]{java}{true || false && false} \quad \textrightarrow \quad \only<5->{\mintinline[style=friendly]{java}{true}}
        \item<6-> \mintinline[style=friendly]{java}{(true || false) && false} \quad \textrightarrow \quad \only<7->{\mintinline[style=friendly]{java}{false}}
    \end{itemize}
\end{frame}



%IF-VERZWEIGUNG
\begin{frame}[fragile]
  \frametitle{if-Verzweigung}

  \begin{itemize}
    \item<1-> Boolescher Ausdruck entscheidet
    \item<1-> Ausführung nur wenn \texttt{true}
    \item<1-> Syntax:
      \begin{minted}[style=friendly,fontsize=\small]{java}
if (Bedingung) {
  // Code bei true
}
      \end{minted}
    \item<2-> Beispiel:
      \begin{minted}[style=friendly,fontsize=\small]{java}
boolean a = true;
if (a) {
  System.out.println("a ist wahr");
}
      \end{minted}

      \only<3->{\mintinline[style=friendly]{java}{//Ausgabe:}}
      \only<3->{\mintinline[style=friendly]{java}{a ist wahr}}

  \end{itemize}
\end{frame}



%IF-ELSE-VERZWEIGUNG
\begin{frame}[fragile]
  \frametitle{if-else-Verzweigung}

  \begin{itemize}
    \item<1-> Erweiterung der if-Anweisung
    \item<1-> Ausführung bei \texttt{true} oder \texttt{false}
    \item<1-> Syntax:
\begin{minted}[style=friendly,fontsize=\small]{java}
if (Bedingung) {
  // Code bei true
} else {
  // Code bei false
}
\end{minted}
    \item<2-> Beispiel:
\begin{minted}[style=friendly,fontsize=\small]{java}
boolean a = false;
if (a) {
  System.out.println("a ist wahr");
} else {
  System.out.println("a ist falsch");
}
\end{minted}
\only<3->{\mintinline[style=friendly]{java}{//Ausgabe:}}
\only<3->{\mintinline[style=friendly]{java}{a ist falsch}}
  \end{itemize}
\end{frame}



%WHILE
\begin{frame}[fragile]
  \frametitle{while-Schleife}

  \begin{itemize}
    \item<1-> Wiederholt Anweisungen, solange eine Bedingung \texttt{true} ist
    \item<1-> Syntax: \mintinline[style=friendly]{java}{while (Bedingung) { /* Code */ }}
    \item<2-> Beispiel:
      \begin{minted}[style=friendly,fontsize=\small]{java}
Scanner scanner = new Scanner(System.in);
String eingabe = "";

while (!eingabe.equals("ok")) {
  System.out.println("Bitte 'ok' eingeben:");
  eingabe = scanner.nextLine();
}
      \end{minted}

      \begin{minted}[style=friendly,fontsize=\small]{java}
// Ausgabe
// Bitte 'ok' eingeben:
// ...
// Bitte 'ok' eingeben:
// (Benutzer tippt "ok") → Schleife endet
      \end{minted}

      \end{itemize}

    %\only<3->{\mintinline[style=friendly]{java}{//Ausgabe:}}
    %\only<3->{\mintinline[style=friendly]{java}{Bitte 'ok' eingeben:}}




\end{frame}

\end{document}
